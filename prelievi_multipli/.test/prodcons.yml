rules:
  - id: if-then-minore-uguale-consuma
    languages:
      - c
    severity: ERROR
    message: "Nel costrutto IF la condizione è TOT_ELEMENTI < 2. In questo esercizio, nella funzione consuma(), bisogna effettuare una Wait su MESSAGGIO_DISPONIBILE solo se il numero totale di elementi è < 2."
    patterns:
      - pattern: |
          void consuma(...){
            ...
          }
      - pattern-not: |
          void consuma(...){
            ...
            if($TOT_ELEMENTI < 2){
              ...
            }
            ...
          }
  - id: if-then-maggiore-uguale-produci
    languages:
      - c
    severity: ERROR
    message: "nel costrutto IF della funzione produci() serve >= 2. In questo esercizio, nella funzione produci(),
    bisogna effettuare una Signal su MESSAGGIO_DISPONIBILE solo se il numero totale di elementi è >= 2. "
    patterns:
      - pattern: |
          void produci(...){
            ...
            if($TOT_ELEMENTI == $DIM){
              ...
            }
            ...
          }
      - pattern-not: |
          void produci(...){
            ...
            if($TOT_ELEMENTI == $DIM){
              ...
            }
            ...
            if($TOT_ELEMENTI >= 2){
              ...
            }
            ...
          }
  - id: errore-wait-signal
    languages:
      - c
    severity: ERROR
    message: "Errore nella coppia di funzioni wait_condition/signal_condition. Controllare di aver chiamato Wait/Signal nella posizione corretta all'interno del codice."
    patterns:
      - pattern: |
          void produci(...){
            ...
          }
      - pattern-not: |
          void produci(...){
            ...
            if($CONDIZIONE){
              wait_condition(...);
            }
            ...
            if($ALTRA_CONDIZIONE){
              signal_condition(...);
            }
          }
  - id: signal-due-volte
    languages:
      - c
    severity: ERROR
    message: "La funzione signal_condition va chiamata due volte perché ci sono due buffer."
    patterns:
      - pattern: |
          void consuma(...){
            enter_monitor(...);
            ...
            signal_condition(...);
            ...
            leave_monitor(...);
          }
      - pattern-not: |
          void consuma(...){
            enter_monitor(...);
            ...
            signal_condition(...);
            ...
            signal_condition(...);
            ...
            leave_monitor(...);
          }
